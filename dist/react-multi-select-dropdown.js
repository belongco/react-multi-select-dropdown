(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var DropdownItem = React.createClass({displayName: "DropdownItem",
	render : function(){
		if(this.props.selected){
			return React.createElement("li", {className: "multiselect-item active", onClick: this.props.onSelected}, 
						this.props.item[this.props.display_field]
					 	) ;
		}else{
			return  React.createElement("li", {className: "multiselect-item", onClick: this.props.onSelected}, 
						this.props.item[this.props.display_field]
					);
		}
	}
});

var MultiSelect = React.createClass({displayName: "MultiSelect",
	_onItemSelected : function(index){
		var selectedItemsIndex = this.state.selected.indexOf(index);
		(selectedItemsIndex > -1) ? this.state.selected.splice(selectedItemsIndex,1) : this.state.selected.push(index) ;
		this.setState({open:false});
		this.forceUpdate();
		this.props.onUpdate ? this.props.onUpdate(this.state.selected) :"";
	},
	_selectAll : function(){
		if(this.state.selected.length == this.props.items.length){
			this.setState({selected:[]});
		}else{
			var arr = this.props.items.map(function(i,index){
				return index;
			});
			this.setState({selected :arr });

		};
	},
	getInitialState:function(){
		return {open:false,
			selected : this.props.selected
		};
	},
	handleClick:function(e){
		this.setState({open:true});
		self = this;
		var documentClickHandler = function(event){
		if($(event.target).closest(".multiselect."+self.props.name).length===0){
			self.setState({open:false});
			$(document).unbind("click."+self.props.name,documentClickHandler);
			}
		}
		$(document).unbind("click."+self.props.name,documentClickHandler).bind("click."+self.props.name,documentClickHandler);

	},
	componentDidReceiveProps : function(){
		this.forceUpdate();
	},
	render : function(){
		var self = this;
		var dropdownItems = this.props.items.map(function(item,index){
				selected = (self.state.selected.indexOf(index)>-1);
				return React.createElement(DropdownItem, {key: index, onSelected: self._onItemSelected.bind(self,index), item: item, display_field: self.props.display_field, selected: selected, index: index})
		});
		var selectedItems = this.props.items.filter(function(item,index){
				return (self.state.selected.indexOf(index)>-1);
		});
		 // var displayText = (selectedItems.length === self.props.items.length ? "All " + self.props.label : ((selectedItems.length > 0) ? (selectedItems.length > 1 ? selectedItems.length +" " +self.props.label : selectedItems[0][self.props.display_field]) : self.props.label));
		var displayText = (selectedItems.length === self.props.items.length ? "All " + self.props.label : ((selectedItems.length > 0) ? (selectedItems.length > 1 ? selectedItems.length +" " +self.props.label : selectedItems[0][self.props.display_field]) : self.props.label));
		return  React.createElement("div", {className: "multiselect "+self.props.name, onClick: self.handleClick}, 
					React.createElement("p", null, 
						React.createElement("span", null, this.props.children, " "), displayText
					), 
				React.createElement("ul", {className: self.state.open?"multiselect-menu open" :"multiselect-menu close"}, 
				React.createElement("li", {className: "multiselect-item select-all", onClick: self._selectAll}, 
						"Select All"
					), 
				dropdownItems
				)
				);
	}
});


 module.exports = MultiSelect;

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
